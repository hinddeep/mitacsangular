{"ast":null,"code":"import { Subscriber } from '../Subscriber';\nexport class OperatorSubscriber extends Subscriber {\n  constructor(destination, onNext, onComplete, onError, onFinalize) {\n    super(destination);\n    this.onFinalize = onFinalize;\n    this._next = onNext ? function (value) {\n      try {\n        onNext(value);\n      } catch (err) {\n        destination.error(err);\n      }\n    } : super._next;\n    this._error = onError ? function (err) {\n      try {\n        onError(err);\n      } catch (err) {\n        destination.error(err);\n      } finally {\n        this.unsubscribe();\n      }\n    } : super._error;\n    this._complete = onComplete ? function () {\n      try {\n        onComplete();\n      } catch (err) {\n        destination.error(err);\n      } finally {\n        this.unsubscribe();\n      }\n    } : super._complete;\n  }\n  unsubscribe() {\n    var _a;\n    const {\n      closed\n    } = this;\n    super.unsubscribe();\n    !closed && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));\n  }\n}","map":{"version":3,"names":["Subscriber","OperatorSubscriber","constructor","destination","onNext","onComplete","onError","onFinalize","_next","value","err","error","_error","unsubscribe","_complete","_a","closed","call"],"sources":["/Users/hinddeeppurohit/Documents/MitacsAngular/node_modules/rxjs/dist/esm/internal/operators/OperatorSubscriber.js"],"sourcesContent":["import { Subscriber } from '../Subscriber';\nexport class OperatorSubscriber extends Subscriber {\n    constructor(destination, onNext, onComplete, onError, onFinalize) {\n        super(destination);\n        this.onFinalize = onFinalize;\n        this._next = onNext\n            ? function (value) {\n                try {\n                    onNext(value);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n            }\n            : super._next;\n        this._error = onError\n            ? function (err) {\n                try {\n                    onError(err);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : super._error;\n        this._complete = onComplete\n            ? function () {\n                try {\n                    onComplete();\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : super._complete;\n    }\n    unsubscribe() {\n        var _a;\n        const { closed } = this;\n        super.unsubscribe();\n        !closed && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));\n    }\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,OAAO,MAAMC,kBAAkB,SAASD,UAAU,CAAC;EAC/CE,WAAW,CAACC,WAAW,EAAEC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAEC,UAAU,EAAE;IAC9D,KAAK,CAACJ,WAAW,CAAC;IAClB,IAAI,CAACI,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,KAAK,GAAGJ,MAAM,GACb,UAAUK,KAAK,EAAE;MACf,IAAI;QACAL,MAAM,CAACK,KAAK,CAAC;MACjB,CAAC,CACD,OAAOC,GAAG,EAAE;QACRP,WAAW,CAACQ,KAAK,CAACD,GAAG,CAAC;MAC1B;IACJ,CAAC,GACC,KAAK,CAACF,KAAK;IACjB,IAAI,CAACI,MAAM,GAAGN,OAAO,GACf,UAAUI,GAAG,EAAE;MACb,IAAI;QACAJ,OAAO,CAACI,GAAG,CAAC;MAChB,CAAC,CACD,OAAOA,GAAG,EAAE;QACRP,WAAW,CAACQ,KAAK,CAACD,GAAG,CAAC;MAC1B,CAAC,SACO;QACJ,IAAI,CAACG,WAAW,EAAE;MACtB;IACJ,CAAC,GACC,KAAK,CAACD,MAAM;IAClB,IAAI,CAACE,SAAS,GAAGT,UAAU,GACrB,YAAY;MACV,IAAI;QACAA,UAAU,EAAE;MAChB,CAAC,CACD,OAAOK,GAAG,EAAE;QACRP,WAAW,CAACQ,KAAK,CAACD,GAAG,CAAC;MAC1B,CAAC,SACO;QACJ,IAAI,CAACG,WAAW,EAAE;MACtB;IACJ,CAAC,GACC,KAAK,CAACC,SAAS;EACzB;EACAD,WAAW,GAAG;IACV,IAAIE,EAAE;IACN,MAAM;MAAEC;IAAO,CAAC,GAAG,IAAI;IACvB,KAAK,CAACH,WAAW,EAAE;IACnB,CAACG,MAAM,KAAK,CAACD,EAAE,GAAG,IAAI,CAACR,UAAU,MAAM,IAAI,IAAIQ,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACE,IAAI,CAAC,IAAI,CAAC,CAAC;EAC1F;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}