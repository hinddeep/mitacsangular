{"ast":null,"code":"import { ReplaySubject } from '../ReplaySubject';\nimport { share } from './share';\nexport function shareReplay(configOrBufferSize, windowTime, scheduler) {\n  var _a, _b;\n  let bufferSize;\n  let refCount = false;\n  if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n    bufferSize = (_a = configOrBufferSize.bufferSize) !== null && _a !== void 0 ? _a : Infinity;\n    windowTime = (_b = configOrBufferSize.windowTime) !== null && _b !== void 0 ? _b : Infinity;\n    refCount = !!configOrBufferSize.refCount;\n    scheduler = configOrBufferSize.scheduler;\n  } else {\n    bufferSize = configOrBufferSize !== null && configOrBufferSize !== void 0 ? configOrBufferSize : Infinity;\n  }\n  return share({\n    connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\n    resetOnError: true,\n    resetOnComplete: false,\n    resetOnRefCountZero: refCount\n  });\n}","map":{"version":3,"names":["ReplaySubject","share","shareReplay","configOrBufferSize","windowTime","scheduler","_a","_b","bufferSize","refCount","Infinity","connector","resetOnError","resetOnComplete","resetOnRefCountZero"],"sources":["/Users/hinddeeppurohit/Documents/MitacsAngular/node_modules/rxjs/dist/esm/internal/operators/shareReplay.js"],"sourcesContent":["import { ReplaySubject } from '../ReplaySubject';\nimport { share } from './share';\nexport function shareReplay(configOrBufferSize, windowTime, scheduler) {\n    var _a, _b;\n    let bufferSize;\n    let refCount = false;\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n        bufferSize = (_a = configOrBufferSize.bufferSize) !== null && _a !== void 0 ? _a : Infinity;\n        windowTime = (_b = configOrBufferSize.windowTime) !== null && _b !== void 0 ? _b : Infinity;\n        refCount = !!configOrBufferSize.refCount;\n        scheduler = configOrBufferSize.scheduler;\n    }\n    else {\n        bufferSize = configOrBufferSize !== null && configOrBufferSize !== void 0 ? configOrBufferSize : Infinity;\n    }\n    return share({\n        connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\n        resetOnError: true,\n        resetOnComplete: false,\n        resetOnRefCountZero: refCount\n    });\n}\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,SAASC,KAAK,QAAQ,SAAS;AAC/B,OAAO,SAASC,WAAW,CAACC,kBAAkB,EAAEC,UAAU,EAAEC,SAAS,EAAE;EACnE,IAAIC,EAAE,EAAEC,EAAE;EACV,IAAIC,UAAU;EACd,IAAIC,QAAQ,GAAG,KAAK;EACpB,IAAIN,kBAAkB,IAAI,OAAOA,kBAAkB,KAAK,QAAQ,EAAE;IAC9DK,UAAU,GAAG,CAACF,EAAE,GAAGH,kBAAkB,CAACK,UAAU,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGI,QAAQ;IAC3FN,UAAU,GAAG,CAACG,EAAE,GAAGJ,kBAAkB,CAACC,UAAU,MAAM,IAAI,IAAIG,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGG,QAAQ;IAC3FD,QAAQ,GAAG,CAAC,CAACN,kBAAkB,CAACM,QAAQ;IACxCJ,SAAS,GAAGF,kBAAkB,CAACE,SAAS;EAC5C,CAAC,MACI;IACDG,UAAU,GAAGL,kBAAkB,KAAK,IAAI,IAAIA,kBAAkB,KAAK,KAAK,CAAC,GAAGA,kBAAkB,GAAGO,QAAQ;EAC7G;EACA,OAAOT,KAAK,CAAC;IACTU,SAAS,EAAE,MAAM,IAAIX,aAAa,CAACQ,UAAU,EAAEJ,UAAU,EAAEC,SAAS,CAAC;IACrEO,YAAY,EAAE,IAAI;IAClBC,eAAe,EAAE,KAAK;IACtBC,mBAAmB,EAAEL;EACzB,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}