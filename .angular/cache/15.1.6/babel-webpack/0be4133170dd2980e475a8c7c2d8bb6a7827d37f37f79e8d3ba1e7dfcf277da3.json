{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/services/communication-service.service\";\nimport * as i2 from \"@angular/common\";\nexport class AnalogClockComponent {\n  constructor(commService) {\n    this.commService = commService;\n    this.hourHandStyle = {\n      transform: `translate3d(-50%, 0, 0) rotate(0deg)`\n    };\n    this.minuteHandStyle = {\n      transform: `translate3d(-50%, 0, 0) rotate(0deg)`\n    };\n    this.secondHandStyle = {\n      transform: `translate3d(-50%, 0, 0) rotate(0deg)`\n    };\n    this.isRunning = false;\n    this.date = new Date();\n    this.hour = 0;\n    this.minute = 0;\n    this.second = 0;\n  }\n  ngAfterViewInit() {\n    this.timerId = this.getTime();\n    this.commService.bsToggle.subscribe(event => {\n      this.toggle();\n    });\n  }\n  getTime() {\n    return setInterval(() => {\n      this.commService.bsTime.subscribe(event => {\n        this.hour = event.h;\n        this.minute = event.m;\n        this.second = event.s;\n      });\n      this.animateAnalogClock();\n    }, 1000);\n  }\n  toggle() {\n    if (this.isRunning) {\n      clearInterval(this.timerId);\n    } else {\n      this.getTime();\n    }\n    this.isRunning = !this.isRunning;\n  }\n  animateAnalogClock() {\n    this.hourHandStyle = {\n      transform: `translate3d(-50%, 0, 0) rotate(${this.hour * 30 + this.minute * 0.5 + this.second * (0.5 / 60)}deg)`\n    };\n    this.minuteHandStyle = {\n      transform: `translate3d(-50%, 0, 0) rotate(${this.minute * 6 + this.second * 0.1}deg)`\n    };\n    this.secondHandStyle = {\n      transform: `translate3d(-50%, 0, 0) rotate(${this.second * 6}deg)`\n    };\n  }\n}\nAnalogClockComponent.ɵfac = function AnalogClockComponent_Factory(t) {\n  return new (t || AnalogClockComponent)(i0.ɵɵdirectiveInject(i1.CommunicationServiceService));\n};\nAnalogClockComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AnalogClockComponent,\n  selectors: [[\"app-analog-clock\"]],\n  decls: 4,\n  vars: 3,\n  consts: [[\"id\", \"clockContainer\"], [\"id\", \"hour\", 3, \"ngStyle\"], [\"id\", \"minute\", 3, \"ngStyle\"], [\"id\", \"second\", 3, \"ngStyle\"]],\n  template: function AnalogClockComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngStyle\", ctx.hourHandStyle);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngStyle\", ctx.minuteHandStyle);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngStyle\", ctx.secondHandStyle);\n    }\n  },\n  dependencies: [i2.NgStyle],\n  styles: [\"#clockContainer[_ngcontent-%COMP%]{position:relative;margin:auto;height:20vw;width:20vw;background:black;background-size:100%;border-radius:50%}#hour[_ngcontent-%COMP%], #minute[_ngcontent-%COMP%], #second[_ngcontent-%COMP%]{position:absolute;background:red;border-radius:10px;transform-origin:bottom;width:1%;height:40%;top:9%;left:49.25%;opacity:.8}#hour[_ngcontent-%COMP%]{position:absolute;background:red;border-radius:10px;transform-origin:bottom;width:1.8%;height:25%;top:25%;left:48.85%;opacity:.8}#minute[_ngcontent-%COMP%]{position:absolute;background:grey;border-radius:10px;transform-origin:bottom;width:3%;height:30%;top:19%;left:48.9%;opacity:.8}#hour[_ngcontent-%COMP%]{position:absolute;background:grey;border-radius:10px;transform-origin:bottom}\"]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}