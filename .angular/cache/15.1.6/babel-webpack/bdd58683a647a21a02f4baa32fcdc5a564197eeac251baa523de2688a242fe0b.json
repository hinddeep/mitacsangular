{"ast":null,"code":"import { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nexport const defaultThrottleConfig = {\n  leading: true,\n  trailing: false\n};\nexport function throttle(durationSelector, {\n  leading,\n  trailing\n} = defaultThrottleConfig) {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let sendValue = null;\n    let throttled = null;\n    let isComplete = false;\n    const endThrottling = () => {\n      throttled === null || throttled === void 0 ? void 0 : throttled.unsubscribe();\n      throttled = null;\n      if (trailing) {\n        send();\n        isComplete && subscriber.complete();\n      }\n    };\n    const cleanupThrottling = () => {\n      throttled = null;\n      isComplete && subscriber.complete();\n    };\n    const startThrottle = value => throttled = innerFrom(durationSelector(value)).subscribe(new OperatorSubscriber(subscriber, endThrottling, cleanupThrottling));\n    const send = () => {\n      if (hasValue) {\n        hasValue = false;\n        const value = sendValue;\n        sendValue = null;\n        subscriber.next(value);\n        !isComplete && startThrottle(value);\n      }\n    };\n    source.subscribe(new OperatorSubscriber(subscriber, value => {\n      hasValue = true;\n      sendValue = value;\n      !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));\n    }, () => {\n      isComplete = true;\n      !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();\n    }));\n  });\n}","map":{"version":3,"names":["operate","OperatorSubscriber","innerFrom","defaultThrottleConfig","leading","trailing","throttle","durationSelector","source","subscriber","hasValue","sendValue","throttled","isComplete","endThrottling","unsubscribe","send","complete","cleanupThrottling","startThrottle","value","subscribe","next","closed"],"sources":["/Users/hinddeeppurohit/Documents/MitacsAngular/node_modules/rxjs/dist/esm/internal/operators/throttle.js"],"sourcesContent":["import { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nexport const defaultThrottleConfig = {\n    leading: true,\n    trailing: false,\n};\nexport function throttle(durationSelector, { leading, trailing } = defaultThrottleConfig) {\n    return operate((source, subscriber) => {\n        let hasValue = false;\n        let sendValue = null;\n        let throttled = null;\n        let isComplete = false;\n        const endThrottling = () => {\n            throttled === null || throttled === void 0 ? void 0 : throttled.unsubscribe();\n            throttled = null;\n            if (trailing) {\n                send();\n                isComplete && subscriber.complete();\n            }\n        };\n        const cleanupThrottling = () => {\n            throttled = null;\n            isComplete && subscriber.complete();\n        };\n        const startThrottle = (value) => (throttled = innerFrom(durationSelector(value)).subscribe(new OperatorSubscriber(subscriber, endThrottling, cleanupThrottling)));\n        const send = () => {\n            if (hasValue) {\n                hasValue = false;\n                const value = sendValue;\n                sendValue = null;\n                subscriber.next(value);\n                !isComplete && startThrottle(value);\n            }\n        };\n        source.subscribe(new OperatorSubscriber(subscriber, (value) => {\n            hasValue = true;\n            sendValue = value;\n            !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));\n        }, () => {\n            isComplete = true;\n            !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();\n        }));\n    });\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,cAAc;AACtC,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,SAASC,SAAS,QAAQ,yBAAyB;AACnD,OAAO,MAAMC,qBAAqB,GAAG;EACjCC,OAAO,EAAE,IAAI;EACbC,QAAQ,EAAE;AACd,CAAC;AACD,OAAO,SAASC,QAAQ,CAACC,gBAAgB,EAAE;EAAEH,OAAO;EAAEC;AAAS,CAAC,GAAGF,qBAAqB,EAAE;EACtF,OAAOH,OAAO,CAAC,CAACQ,MAAM,EAAEC,UAAU,KAAK;IACnC,IAAIC,QAAQ,GAAG,KAAK;IACpB,IAAIC,SAAS,GAAG,IAAI;IACpB,IAAIC,SAAS,GAAG,IAAI;IACpB,IAAIC,UAAU,GAAG,KAAK;IACtB,MAAMC,aAAa,GAAG,MAAM;MACxBF,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,SAAS,CAACG,WAAW,EAAE;MAC7EH,SAAS,GAAG,IAAI;MAChB,IAAIP,QAAQ,EAAE;QACVW,IAAI,EAAE;QACNH,UAAU,IAAIJ,UAAU,CAACQ,QAAQ,EAAE;MACvC;IACJ,CAAC;IACD,MAAMC,iBAAiB,GAAG,MAAM;MAC5BN,SAAS,GAAG,IAAI;MAChBC,UAAU,IAAIJ,UAAU,CAACQ,QAAQ,EAAE;IACvC,CAAC;IACD,MAAME,aAAa,GAAIC,KAAK,IAAMR,SAAS,GAAGV,SAAS,CAACK,gBAAgB,CAACa,KAAK,CAAC,CAAC,CAACC,SAAS,CAAC,IAAIpB,kBAAkB,CAACQ,UAAU,EAAEK,aAAa,EAAEI,iBAAiB,CAAC,CAAE;IACjK,MAAMF,IAAI,GAAG,MAAM;MACf,IAAIN,QAAQ,EAAE;QACVA,QAAQ,GAAG,KAAK;QAChB,MAAMU,KAAK,GAAGT,SAAS;QACvBA,SAAS,GAAG,IAAI;QAChBF,UAAU,CAACa,IAAI,CAACF,KAAK,CAAC;QACtB,CAACP,UAAU,IAAIM,aAAa,CAACC,KAAK,CAAC;MACvC;IACJ,CAAC;IACDZ,MAAM,CAACa,SAAS,CAAC,IAAIpB,kBAAkB,CAACQ,UAAU,EAAGW,KAAK,IAAK;MAC3DV,QAAQ,GAAG,IAAI;MACfC,SAAS,GAAGS,KAAK;MACjB,EAAER,SAAS,IAAI,CAACA,SAAS,CAACW,MAAM,CAAC,KAAKnB,OAAO,GAAGY,IAAI,EAAE,GAAGG,aAAa,CAACC,KAAK,CAAC,CAAC;IAClF,CAAC,EAAE,MAAM;MACLP,UAAU,GAAG,IAAI;MACjB,EAAER,QAAQ,IAAIK,QAAQ,IAAIE,SAAS,IAAI,CAACA,SAAS,CAACW,MAAM,CAAC,IAAId,UAAU,CAACQ,QAAQ,EAAE;IACtF,CAAC,CAAC,CAAC;EACP,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}