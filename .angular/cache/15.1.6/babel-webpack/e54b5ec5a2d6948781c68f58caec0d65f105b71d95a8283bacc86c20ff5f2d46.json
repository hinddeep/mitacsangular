{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/services/communication-service.service\";\nimport * as i2 from \"@angular/common\";\nexport class AnalogClockComponent {\n  constructor(commService) {\n    this.commService = commService;\n    this.hourHandStyle = {\n      transform: `translate3d(-50%, 0, 0) rotate(0deg)`\n    };\n    this.minuteHandStyle = {\n      transform: `translate3d(-50%, 0, 0) rotate(0deg)`\n    };\n    this.secondHandStyle = {\n      transform: `translate3d(-50%, 0, 0) rotate(0deg)`\n    };\n    this.isRunning = false;\n    this.date = new Date();\n    this.hour = 0;\n    this.minute = 0;\n    this.second = 0;\n  }\n  ngAfterViewInit() {\n    this.timerId = this.getTime();\n    this.commService.bsToggle.subscribe(event => {\n      this.toggle();\n    });\n  }\n  getTime() {\n    return setInterval(() => {\n      this.commService.bsTime.subscribe(event => {\n        this.hour = event.h;\n        this.minute = event.m;\n        this.second = event.s;\n      });\n      this.animateAnalogClock();\n    }, 1000);\n  }\n  toggle() {\n    if (this.isRunning) {\n      clearInterval(this.timerId);\n    } else {\n      this.getTime();\n    }\n    this.isRunning = !this.isRunning;\n  }\n  animateAnalogClock() {\n    this.hourHandStyle = {\n      transform: `translate3d(-50%, 0, 0) rotate(${this.hour * 30 + this.minute * 0.5 + this.second * (0.5 / 60)}deg)`\n    };\n    this.minuteHandStyle = {\n      transform: `translate3d(-50%, 0, 0) rotate(${this.minute * 6 + this.second * 0.1}deg)`\n    };\n    this.secondHandStyle = {\n      transform: `translate3d(-50%, 0, 0) rotate(${this.second * 6}deg)`\n    };\n  }\n}\nAnalogClockComponent.ɵfac = function AnalogClockComponent_Factory(t) {\n  return new (t || AnalogClockComponent)(i0.ɵɵdirectiveInject(i1.CommunicationServiceService));\n};\nAnalogClockComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AnalogClockComponent,\n  selectors: [[\"app-analog-clock\"]],\n  decls: 4,\n  vars: 3,\n  consts: [[\"id\", \"clockContainer\"], [\"id\", \"hour\", 3, \"ngStyle\"], [\"id\", \"minute\", 3, \"ngStyle\"], [\"id\", \"second\", 3, \"ngStyle\"]],\n  template: function AnalogClockComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngStyle\", ctx.hourHandStyle);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngStyle\", ctx.minuteHandStyle);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngStyle\", ctx.secondHandStyle);\n    }\n  },\n  dependencies: [i2.NgStyle],\n  styles: [\"#clockContainer[_ngcontent-%COMP%] {\\n  position: relative;\\n  margin: auto;\\n  height: 20vw;\\n  \\n  width: 20vw;\\n  background: black;\\n  \\n  background-size: 100%;\\n  border-radius: 50%;\\n}\\n\\n#hour[_ngcontent-%COMP%], #minute[_ngcontent-%COMP%], #second[_ngcontent-%COMP%] {\\n  position: absolute;\\n  background: red;\\n  border-radius: 10px;\\n  transform-origin: bottom;\\n  width: 1%;\\n  height: 40%;\\n  top: 9%;\\n  left: 49.25%;\\n  opacity: 0.8;\\n}\\n\\n#hour[_ngcontent-%COMP%] {\\n  position: absolute;\\n  background: red;\\n  border-radius: 10px;\\n  transform-origin: bottom;\\n  width: 1.8%;\\n  height: 25%;\\n  top: 25%;\\n  left: 48.85%;\\n  opacity: 0.8;\\n}\\n\\n#minute[_ngcontent-%COMP%] {\\n  position: absolute;\\n  background: grey;\\n  border-radius: 10px;\\n  transform-origin: bottom;\\n  width: 3%;\\n  height: 30%;\\n  top: 19%;\\n  left: 48.9%;\\n  opacity: 0.8;\\n}\\n\\n#hour[_ngcontent-%COMP%] {\\n  position: absolute;\\n  background: grey;\\n  border-radius: 10px;\\n  transform-origin: bottom;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYW5hbG9nLWNsb2NrL2FuYWxvZy1jbG9jay5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNDLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7RUFDQSwwQ0FBQTtFQUNBLFdBQUE7RUFDQSxpQkFBQTtFQUNBLCtCQUFBO0VBQ0EscUJBQUE7RUFDRyxrQkFBQTtBQUNKOztBQUVBOzs7RUFHQyxrQkFBQTtFQUNBLGVBQUE7RUFDQSxtQkFBQTtFQUNBLHdCQUFBO0VBRUcsU0FBQTtFQUNILFdBQUE7RUFDQSxPQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7QUFBRDs7QUFHQTtFQUNDLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLG1CQUFBO0VBQ0Esd0JBQUE7RUFFRyxXQUFBO0VBQ0gsV0FBQTtFQUNBLFFBQUE7RUFDQSxZQUFBO0VBQ0EsWUFBQTtBQUREOztBQUlBO0VBQ0Msa0JBQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0VBQ0Esd0JBQUE7RUFFRyxTQUFBO0VBQ0gsV0FBQTtFQUNBLFFBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtBQUZEOztBQUtBO0VBQ0Msa0JBQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0VBQ0Esd0JBQUE7QUFGRCIsInNvdXJjZXNDb250ZW50IjpbIiNjbG9ja0NvbnRhaW5lciB7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0bWFyZ2luOiBhdXRvO1xuXHRoZWlnaHQ6IDIwdnc7XG5cdC8qdG8gbWFrZSB0aGUgaGVpZ2h0IGFuZCB3aWR0aCByZXNwb25zaXZlKi9cblx0d2lkdGg6IDIwdnc7XG5cdGJhY2tncm91bmQ6IGJsYWNrO1xuXHQvKnNldHRpbmcgb3VyIGJhY2tncm91bmQgaW1hZ2UqL1xuXHRiYWNrZ3JvdW5kLXNpemU6IDEwMCU7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xufVxuXG4jaG91cixcbiNtaW51dGUsXG4jc2Vjb25kIHtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHRiYWNrZ3JvdW5kOiByZWQ7XG5cdGJvcmRlci1yYWRpdXM6IDEwcHg7XG5cdHRyYW5zZm9ybS1vcmlnaW46IGJvdHRvbTtcblxuICAgIHdpZHRoOiAxJTtcblx0aGVpZ2h0OiA0MCU7XG5cdHRvcDogOSU7XG5cdGxlZnQ6IDQ5LjI1JTtcblx0b3BhY2l0eTogMC44O1xufVxuXG4jaG91ciB7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0YmFja2dyb3VuZDogcmVkO1xuXHRib3JkZXItcmFkaXVzOiAxMHB4O1xuXHR0cmFuc2Zvcm0tb3JpZ2luOiBib3R0b207XG5cbiAgICB3aWR0aDogMS44JTtcblx0aGVpZ2h0OiAyNSU7XG5cdHRvcDogMjUlO1xuXHRsZWZ0OiA0OC44NSU7XG5cdG9wYWNpdHk6IDAuODtcbn1cblxuI21pbnV0ZSB7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0YmFja2dyb3VuZDogZ3JleTtcblx0Ym9yZGVyLXJhZGl1czogMTBweDtcblx0dHJhbnNmb3JtLW9yaWdpbjogYm90dG9tO1xuXG4gICAgd2lkdGg6IDMlO1xuXHRoZWlnaHQ6IDMwJTtcblx0dG9wOiAxOSU7XG5cdGxlZnQ6IDQ4LjklO1xuXHRvcGFjaXR5OiAwLjg7XG59XG5cbiNob3VyIHtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHRiYWNrZ3JvdW5kOiBncmV5O1xuXHRib3JkZXItcmFkaXVzOiAxMHB4O1xuXHR0cmFuc2Zvcm0tb3JpZ2luOiBib3R0b207XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,oBAAoB;EAa/BC,YAAmBC,WAAwC;IAAxC,gBAAW,GAAXA,WAAW;IAZ9B,kBAAa,GAAG;MAAEC,SAAS,EAAE;IAAsC,CAAE;IACrE,oBAAe,GAAG;MAAEA,SAAS,EAAE;IAAsC,CAAE;IACvE,oBAAe,GAAG;MAAEA,SAAS,EAAE;IAAsC,CAAE;IAEvE,cAAS,GAAG,KAAK;IAGjB,SAAI,GAAS,IAAIC,IAAI,EAAE;IACvB,SAAI,GAAW,CAAC;IAChB,WAAM,GAAW,CAAC;IAClB,WAAM,GAAW,CAAC;EAGlB;EAEAC,eAAe;IACb,IAAI,CAACC,OAAO,GAAG,IAAI,CAACC,OAAO,EAAE;IAC7B,IAAI,CAACL,WAAW,CAACM,QAAQ,CAACC,SAAS,CAACC,KAAK,IAAG;MAC1C,IAAI,CAACC,MAAM,EAAE;IACf,CAAC,CAAC;EACJ;EAEAJ,OAAO;IACL,OAAOK,WAAW,CAAC,MAAK;MACtB,IAAI,CAACV,WAAW,CAACW,MAAM,CAACJ,SAAS,CAACC,KAAK,IAAG;QACxC,IAAI,CAACI,IAAI,GAAGJ,KAAK,CAACK,CAAC;QACnB,IAAI,CAACC,MAAM,GAAGN,KAAK,CAACO,CAAC;QACrB,IAAI,CAACC,MAAM,GAAGR,KAAK,CAACS,CAAC;MACvB,CAAC,CAAC;MACF,IAAI,CAACC,kBAAkB,EAAE;IAC3B,CAAC,EAAE,IAAI,CAAC;EACV;EAEAT,MAAM;IACJ,IAAI,IAAI,CAACU,SAAS,EAAE;MAClBC,aAAa,CAAC,IAAI,CAAChB,OAAO,CAAC;KAC5B,MAAM;MAAE,IAAI,CAACC,OAAO,EAAE;;IAEvB,IAAI,CAACc,SAAS,GAAG,CAAC,IAAI,CAACA,SAAS;EAClC;EAEAD,kBAAkB;IAChB,IAAI,CAACG,aAAa,GAAG;MAAEpB,SAAS,EAAE,kCAAmC,IAAI,CAACW,IAAI,GAAG,EAAE,GAAK,IAAI,CAACE,MAAM,GAAG,GAAI,GAAI,IAAI,CAACE,MAAM,IAAI,GAAG,GAAG,EAAE,CAAE;IAAM,CAAE;IAC/I,IAAI,CAACM,eAAe,GAAG;MAAErB,SAAS,EAAE,kCAAmC,IAAI,CAACa,MAAM,GAAG,CAAC,GAAK,IAAI,CAACE,MAAM,GAAG,GAAI;IAAM,CAAE;IACrH,IAAI,CAACO,eAAe,GAAG;MAAEtB,SAAS,EAAE,kCAAkC,IAAI,CAACe,MAAM,GAAG,CAAC;IAAM,CAAE;EAC/F;;AA9CWlB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCRjCC,8BAAyB;MACrBA,yBAA+C;MAGnDA,iBAAM;;;MAHaA,eAAyB;MAAzBA,2CAAyB;MACvBA,eAA2B;MAA3BA,6CAA2B;MAC3BA,eAA2B;MAA3BA,6CAA2B","names":["AnalogClockComponent","constructor","commService","transform","Date","ngAfterViewInit","timerId","getTime","bsToggle","subscribe","event","toggle","setInterval","bsTime","hour","h","minute","m","second","s","animateAnalogClock","isRunning","clearInterval","hourHandStyle","minuteHandStyle","secondHandStyle","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/hinddeeppurohit/Documents/MitacsAngular/src/app/analog-clock/analog-clock.component.ts","/Users/hinddeeppurohit/Documents/MitacsAngular/src/app/analog-clock/analog-clock.component.html"],"sourcesContent":["import { Component, AfterViewInit } from '@angular/core';\nimport { CommunicationServiceService } from 'src/services/communication-service.service';\n\n@Component({\n  selector: 'app-analog-clock',\n  templateUrl: './analog-clock.component.html',\n  styleUrls: ['./analog-clock.component.scss']\n})\nexport class AnalogClockComponent implements AfterViewInit {\n  hourHandStyle = { transform: `translate3d(-50%, 0, 0) rotate(0deg)` }\n  minuteHandStyle = { transform: `translate3d(-50%, 0, 0) rotate(0deg)` }\n  secondHandStyle = { transform: `translate3d(-50%, 0, 0) rotate(0deg)` }\n\n  isRunning = false\n  timerId: any\n\n  date: Date = new Date()\n  hour: number = 0\n  minute: number = 0\n  second: number = 0\n\n  constructor(public commService: CommunicationServiceService) {\n  }\n\n  ngAfterViewInit() {\n    this.timerId = this.getTime();\n    this.commService.bsToggle.subscribe(event => {\n      this.toggle()\n    })\n  }\n\n  getTime() {\n    return setInterval(() => {\n      this.commService.bsTime.subscribe(event => {\n        this.hour = event.h\n        this.minute = event.m\n        this.second = event.s\n      })\n      this.animateAnalogClock()\n    }, 1000)\n  }\n\n  toggle() {\n    if (this.isRunning) {\n      clearInterval(this.timerId)\n    } else { this.getTime() }\n\n    this.isRunning = !this.isRunning\n  }\n\n  animateAnalogClock() {\n    this.hourHandStyle = { transform: `translate3d(-50%, 0, 0) rotate(${(this.hour * 30) + (this.minute * 0.5) + (this.second * (0.5 / 60))}deg)` }\n    this.minuteHandStyle = { transform: `translate3d(-50%, 0, 0) rotate(${(this.minute * 6) + (this.second * 0.1)}deg)` }\n    this.secondHandStyle = { transform: `translate3d(-50%, 0, 0) rotate(${this.second * 6}deg)` }\n  }\n}\n","<div id=\"clockContainer\">\n    <div id=\"hour\" [ngStyle]=\"hourHandStyle\"></div>\n    <div id=\"minute\" [ngStyle]=\"minuteHandStyle\"></div>\n    <div id=\"second\" [ngStyle]=\"secondHandStyle\"></div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}