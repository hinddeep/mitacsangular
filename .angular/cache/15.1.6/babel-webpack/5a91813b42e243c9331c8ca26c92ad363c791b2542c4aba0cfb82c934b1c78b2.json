{"ast":null,"code":"import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { arrRemove } from './util/arrRemove';\nexport class Subscription {\n  constructor(initialTeardown) {\n    this.initialTeardown = initialTeardown;\n    this.closed = false;\n    this._parentage = null;\n    this._teardowns = null;\n  }\n  unsubscribe() {\n    let errors;\n    if (!this.closed) {\n      this.closed = true;\n      const {\n        _parentage\n      } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n      const {\n        initialTeardown\n      } = this;\n      if (isFunction(initialTeardown)) {\n        try {\n          initialTeardown();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n      const {\n        _teardowns\n      } = this;\n      if (_teardowns) {\n        this._teardowns = null;\n        for (const teardown of _teardowns) {\n          try {\n            execTeardown(teardown);\n          } catch (err) {\n            errors = errors !== null && errors !== void 0 ? errors : [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n  add(teardown) {\n    var _a;\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        execTeardown(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._teardowns = (_a = this._teardowns) !== null && _a !== void 0 ? _a : []).push(teardown);\n      }\n    }\n  }\n  _hasParent(parent) {\n    const {\n      _parentage\n    } = this;\n    return _parentage === parent || Array.isArray(_parentage) && _parentage.includes(parent);\n  }\n  _addParent(parent) {\n    const {\n      _parentage\n    } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n  _removeParent(parent) {\n    const {\n      _parentage\n    } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n  remove(teardown) {\n    const {\n      _teardowns\n    } = this;\n    _teardowns && arrRemove(_teardowns, teardown);\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\nSubscription.EMPTY = (() => {\n  const empty = new Subscription();\n  empty.closed = true;\n  return empty;\n})();\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\nexport function isSubscription(value) {\n  return value instanceof Subscription || value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe);\n}\nfunction execTeardown(teardown) {\n  if (isFunction(teardown)) {\n    teardown();\n  } else {\n    teardown.unsubscribe();\n  }\n}","map":{"version":3,"names":["isFunction","UnsubscriptionError","arrRemove","Subscription","constructor","initialTeardown","closed","_parentage","_teardowns","unsubscribe","errors","Array","isArray","parent","remove","e","teardown","execTeardown","err","push","add","_a","_hasParent","_addParent","includes","_removeParent","EMPTY","empty","EMPTY_SUBSCRIPTION","isSubscription","value"],"sources":["/Users/hinddeeppurohit/Documents/MitacsAngular/node_modules/rxjs/dist/esm/internal/Subscription.js"],"sourcesContent":["import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { arrRemove } from './util/arrRemove';\nexport class Subscription {\n    constructor(initialTeardown) {\n        this.initialTeardown = initialTeardown;\n        this.closed = false;\n        this._parentage = null;\n        this._teardowns = null;\n    }\n    unsubscribe() {\n        let errors;\n        if (!this.closed) {\n            this.closed = true;\n            const { _parentage } = this;\n            if (_parentage) {\n                this._parentage = null;\n                if (Array.isArray(_parentage)) {\n                    for (const parent of _parentage) {\n                        parent.remove(this);\n                    }\n                }\n                else {\n                    _parentage.remove(this);\n                }\n            }\n            const { initialTeardown } = this;\n            if (isFunction(initialTeardown)) {\n                try {\n                    initialTeardown();\n                }\n                catch (e) {\n                    errors = e instanceof UnsubscriptionError ? e.errors : [e];\n                }\n            }\n            const { _teardowns } = this;\n            if (_teardowns) {\n                this._teardowns = null;\n                for (const teardown of _teardowns) {\n                    try {\n                        execTeardown(teardown);\n                    }\n                    catch (err) {\n                        errors = errors !== null && errors !== void 0 ? errors : [];\n                        if (err instanceof UnsubscriptionError) {\n                            errors = [...errors, ...err.errors];\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n            if (errors) {\n                throw new UnsubscriptionError(errors);\n            }\n        }\n    }\n    add(teardown) {\n        var _a;\n        if (teardown && teardown !== this) {\n            if (this.closed) {\n                execTeardown(teardown);\n            }\n            else {\n                if (teardown instanceof Subscription) {\n                    if (teardown.closed || teardown._hasParent(this)) {\n                        return;\n                    }\n                    teardown._addParent(this);\n                }\n                (this._teardowns = (_a = this._teardowns) !== null && _a !== void 0 ? _a : []).push(teardown);\n            }\n        }\n    }\n    _hasParent(parent) {\n        const { _parentage } = this;\n        return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n    }\n    _addParent(parent) {\n        const { _parentage } = this;\n        this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n    }\n    _removeParent(parent) {\n        const { _parentage } = this;\n        if (_parentage === parent) {\n            this._parentage = null;\n        }\n        else if (Array.isArray(_parentage)) {\n            arrRemove(_parentage, parent);\n        }\n    }\n    remove(teardown) {\n        const { _teardowns } = this;\n        _teardowns && arrRemove(_teardowns, teardown);\n        if (teardown instanceof Subscription) {\n            teardown._removeParent(this);\n        }\n    }\n}\nSubscription.EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n})();\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\nexport function isSubscription(value) {\n    return (value instanceof Subscription ||\n        (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe)));\n}\nfunction execTeardown(teardown) {\n    if (isFunction(teardown)) {\n        teardown();\n    }\n    else {\n        teardown.unsubscribe();\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}